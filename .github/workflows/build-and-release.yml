name: 'Build and release'

on:
  workflow_call:
    inputs:
      git-ref:
        description: 'A ref (tag) to check out before building'
        default: ''
        required: false
        type: string
      jreleaser-do-not-tag:
        description: 'Should JReleaser NOT set a tag?'
        default: false
        required: false
        type: boolean

jobs:
  # Build native executable per runner
  build:
    name: 'Build with Graal on ${{ matrix.os }}'
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ inputs.git-ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: cardinalby/export-env-action@v2
        with:
          envFile: '.github/workflows/env.txt'

      - name: Set up GraalVM JDK
        uses: graalvm/setup-graalvm@v1
        with:
          distribution: ${{ env.GRAAL_DISTRO }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'maven'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build with Maven
        run: ./mvnw -ntp -B verify jreleaser:assemble

      - name: 'Run smoke test (POSIX)'
        if: ${{ runner.os != 'Windows' }}
        run: |
          target/jreleaser/assemble/solarpos-native/native-image/solarpos -V
          target/jreleaser/assemble/solarpos-native/native-image/solarpos 51.5 0 now position

      - name: 'Run smoke test (Windows)'
        if: ${{ runner.os == 'Windows' }}
        run: |
          target\jreleaser\assemble\solarpos-native\native-image\solarpos.exe -V
          target\jreleaser\assemble\solarpos-native\native-image\solarpos.exe 51.5 0 now position

      - name: 'Upload build artifacts'
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: |
            target/**/*

  release:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - run: git checkout ${{ inputs.git-ref }}
          
      - uses: cardinalby/export-env-action@v2
        with:
          envFile: '.github/workflows/env.txt'

      - name: Set up GraalVM JDK
        uses: graalvm/setup-graalvm@v1
        with:
          distribution: ${{ env.GRAAL_DISTRO }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'maven'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Download all build artifacts'
        uses: actions/download-artifact@v4
        with:
          name: artifacts
          path: target

      - name: 'List files'
        run: |
          sudo apt-get -y install tree
          tree

      - name: 'Release with JReleaser'
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          JRELEASER_SKIP_TAG: ${{ inputs.jreleaser-do-not-tag }}
        run: ./mvnw -ntp -e -B jreleaser:full-release
